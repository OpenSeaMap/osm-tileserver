stevo@stone:/media/data/docker/openstreetmap-tile-server$ sudo ./import_planet.sh 
################################################################################
Benchmark openstreetmap-tile-server import
import file: /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf
################################################################################
* dev-stevo                       20662d1 [ahead 16, behind 6] max_worker_processes added to psql config file
  dev-stevo-a                     5c6e493 shell script added the script supports following tasks: - build of docker image - download of maps - import of single osm map - start of the container after import - connect to shell (runnung inside container) - stop of the container
  master                          d7c2817 Extend troubleshooting section
  stevo-autovacuum                a02daac [behind 6] environment variable AUTOVACUUM added
  remotes/Overv/master            d7c2817 Extend troubleshooting section
  remotes/origin/HEAD             -> origin/master
  remotes/origin/dev-stevo        057747e max_worker_processes added to psql config file
  remotes/origin/master           d7c2817 Extend troubleshooting section
  remotes/origin/stevo-autovacuum 095c3ba Merge branch 'master' into stevo-autovacuum
  remotes/pl/SSL                  c8f8d0f verify SSL
  remotes/pl/master               c99368d Info about shared memory error
  remotes/pl/poland               8ef1fd8 Poprawiony adres aplikacji demonstracyjnej
  remotes/pl/postgres-11          7ee71e2 Merge branch 'SSL' into postgres-11

date=Sat Jun  8 18:30:50 CEST 2019

cleanup data in psql data directory
openstreetmap-data-planet-latest
openstreetmap-data-planet-latest

docker run -e AUTOVACUUM=off -e THREADS=16 --name openstreetmap-tile-server --publish 8001:80 -v /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf:/data.osm.pbf -v openstreetmap-data-planet-latest:/var/lib/postgresql/10/main -v openstreetmap-rendered-tiles:/var/lib/mod_tile openstreetmap-tile-server import

+ '[' 1 -ne 1 ']'
+ '[' import = import ']'
+ CreatePostgressqlConfig
+ cp /etc/postgresql/10/main/postgresql.custom.conf.tmpl /etc/postgresql/10/main/postgresql.custom.conf
+ sudo -u postgres echo 'autovacuum = off'
+ cat /etc/postgresql/10/main/postgresql.custom.conf
shared_buffers = 128MB
work_mem = 32MB
maintenance_work_mem = 256MB
min_wal_size = 1GB
max_wal_size = 2GB
temp_buffers = 32MB
wal_buffers = 1024kB

effective_io_concurrency = 500
checkpoint_timeout = 1h
checkpoint_completion_target = 0.9
random_page_cost = 1.1
max_connections = 250
wal_writer_delay = 500ms
commit_delay = 10000
track_activity_query_size = 16384

autovacuum = off
track_counts = off
fsync = off
synchronous_commit = off
autovacuum = off
+ service postgresql start
 * Starting PostgreSQL 10 database server
   ...done.
+ sudo -u postgres createuser renderer
+ sudo -u postgres createdb -E UTF8 -O renderer gis
+ sudo -u postgres psql -d gis -c 'CREATE EXTENSION postgis;'
CREATE EXTENSION
+ sudo -u postgres psql -d gis -c 'CREATE EXTENSION hstore;'
CREATE EXTENSION
+ sudo -u postgres psql -d gis -c 'ALTER TABLE geometry_columns OWNER TO renderer;'
ALTER TABLE
+ sudo -u postgres psql -d gis -c 'ALTER TABLE spatial_ref_sys OWNER TO renderer;'
ALTER TABLE
+ '[' '!' -f /data.osm.pbf ']'
+ sudo -u renderer osm2pgsql -d gis --create --slim -G --hstore --tag-transform-script /home/renderer/src/openstreetmap-carto/openstreetmap-carto.lua -C 3072 --number-processes 16 -S /home/renderer/src/openstreetmap-carto/openstreetmap-carto.style /data.osm.pbf
osm2pgsql version 0.96.0 (64 bit id space)

Allocating memory for dense node cache
Allocating dense node cache in one big chunk
Allocating memory for sparse node cache
Sharing dense sparse
Node-cache: cache=3072MB, maxblocks=49152*65536, allocation method=11
Mid: pgsql, cache=3072
Setting up table: planet_osm_nodes
Setting up table: planet_osm_ways
Setting up table: planet_osm_rels
Using lua based tag processing pipeline with script /home/renderer/src/openstreetmap-carto/openstreetmap-carto.lua
Using projection SRS 3857 (Spherical Mercator)
Setting up table: planet_osm_point
Setting up table: planet_osm_line
Setting up table: planet_osm_polygon
Setting up table: planet_osm_roads

Reading in file: /data.osm.pbf
Using PBF parser.
Processing: Node(5234820k 337.4k/s) Way(582471k 3.51k/s) Relation(6792420 155.48/s)  parse time: 225373s
Node stats: total(5234820101), max(6517241592) in 15517s
Way stats: total(582471723), max(694166040) in 166169s
Relation stats: total(6792645), max(9647639) in 43687s
Sorting data and creating indexes for planet_osm_polygon
Sorting data and creating indexes for planet_osm_line
Sorting data and creating indexes for planet_osm_roads
Sorting data and creating indexes for planet_osm_point
Stopping table: planet_osm_nodes
Stopping table: planet_osm_rels
Stopping table: planet_osm_ways
Stopped table: planet_osm_nodes in 0s
Building index on table: planet_osm_rels
Building index on table: planet_osm_ways
Stopped table: planet_osm_rels in 939s
Copying planet_osm_roads to cluster by geometry finished
Creating geometry index on planet_osm_roads
Copying planet_osm_point to cluster by geometry finished
Creating geometry index on planet_osm_point
Creating osm_id index on planet_osm_roads
Creating indexes on planet_osm_roads finished
All indexes on planet_osm_roads created in 4411s
Completed planet_osm_roads
^CCreating osm_id index on planet_osm_point
Creating indexes on planet_osm_point finished
All indexes on planet_osm_point created in 9922s
Completed planet_osm_point
Copying planet_osm_line to cluster by geometry finished
Creating geometry index on planet_osm_line
Creating osm_id index on planet_osm_line
Creating indexes on planet_osm_line finished
All indexes on planet_osm_line created in 21678s
Completed planet_osm_line
Copying planet_osm_polygon to cluster by geometry finished
Creating geometry index on planet_osm_polygon
Creating osm_id index on planet_osm_polygon
Creating indexes on planet_osm_polygon finished
All indexes on planet_osm_polygon created in 50656s
Completed planet_osm_polygon
Stopped table: planet_osm_ways in 70092s

Osm2pgsql took 295469s overall
node cache: stored: 377986368(7.22%), storage efficiency: 93.87% (dense blocks: 44086, sparse nodes: 20750337), hit rate: 7.11%
+ service postgresql stop
 * Stopping PostgreSQL 10 database server
   ...done.
+ '[' import = run ']'
+ echo 'invalid command'
+ exit 1
invalid command

real	4924m37.676s
user	0m29.664s
sys	0m30.956s

date=Wed Jun 12 04:35:28 CEST 2019

lrwxrwxrwx 1 stevo stevo 21 Jun  8 09:33 /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf -> planet-190603.osm.pbf
