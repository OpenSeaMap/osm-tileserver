root@stone:/media/data/docker/openstreetmap-tile-server# ./import_planet.sh 
################################################################################
Benchmark openstreetmap-tile-server import
import file: /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf
################################################################################

date=Sun Apr 21 14:09:03 CEST 2019

cleanup data in psql data directory
openstreetmap-data-planet-latest
openstreetmap-data-planet-latest

docker run --rm -e THREADS=16 --name openstreetmap-tile-server --publish 8001:80 -v /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf:/data.osm.pbf -v openstreetmap-data-planet-latest:/var/lib/postgresql/10/main -v openstreetmap-rendered-tiles:/var/lib/mod_tile openstreetmap-tile-server import

 * Starting PostgreSQL 10 database server
   ...done.
CREATE EXTENSION
CREATE EXTENSION
ALTER TABLE
ALTER TABLE
osm2pgsql version 0.96.0 (64 bit id space)

Allocating memory for dense node cache
Allocating dense node cache in one big chunk
Allocating memory for sparse node cache
Sharing dense sparse
Node-cache: cache=32768MB, maxblocks=524288*65536, allocation method=11
Mid: pgsql, cache=32768
Setting up table: planet_osm_nodes
Setting up table: planet_osm_ways
Setting up table: planet_osm_rels
Using lua based tag processing pipeline with script /home/renderer/src/openstreetmap-carto/openstreetmap-carto.lua
Using projection SRS 3857 (Spherical Mercator)
Setting up table: planet_osm_point
Setting up table: planet_osm_line
Setting up table: planet_osm_polygon
Setting up table: planet_osm_roads

Reading in file: /data.osm.pbf
Using PBF parser.
Processing: Node(5141991k 343.1k/s) Way(573848k 10.07k/s) Relation(6673200 394.09/s)  parse time: 88908s
Node stats: total(5141991572), max(6405410426) in 14986s
Way stats: total(573848080), max(683818783) in 56989s
Relation stats: total(6673223), max(9486622) in 16933s
Sorting data and creating indexes for planet_osm_roads
Sorting data and creating indexes for planet_osm_polygon
Sorting data and creating indexes for planet_osm_point
Sorting data and creating indexes for planet_osm_line
Stopping table: planet_osm_nodes
Stopping table: planet_osm_rels
Stopping table: planet_osm_ways
Building index on table: planet_osm_ways
Building index on table: planet_osm_rels
Stopped table: planet_osm_nodes in 0s
Stopped table: planet_osm_rels in 505s
Copying planet_osm_roads to cluster by geometry finished
Creating geometry index on planet_osm_roads
Copying planet_osm_point to cluster by geometry finished
Creating geometry index on planet_osm_point
Creating osm_id index on planet_osm_roads
Creating indexes on planet_osm_roads finished
All indexes on planet_osm_roads created in 2028s
Completed planet_osm_roads
Creating osm_id index on planet_osm_point
Creating indexes on planet_osm_point finished
All indexes on planet_osm_point created in 4833s
Completed planet_osm_point
Copying planet_osm_line to cluster by geometry finished
Creating geometry index on planet_osm_line
Creating osm_id index on planet_osm_line
Creating indexes on planet_osm_line finished
All indexes on planet_osm_line created in 11744s
Completed planet_osm_line

Copying planet_osm_polygon to cluster by geometry finished
Creating geometry index on planet_osm_polygon
Creating osm_id index on planet_osm_polygon
Creating indexes on planet_osm_polygon finished
All indexes on planet_osm_polygon created in 36054s
Completed planet_osm_polygon
Stopped table: planet_osm_ways in 61252s

Osm2pgsql took 150161s overall
node cache: stored: 3824052167(74.37%), storage efficiency: 89.04% (dense blocks: 486507, sparse nodes: 154750977), hit rate: 73.03%
 * Stopping PostgreSQL 10 database server
   ...done.
/run.sh: line 33: 0: command not found
invalid command

real	2502m51.991s
user	0m13.444s
sys	0m17.224s

date=Tue Apr 23 07:51:56 CEST 2019

-rw-r--r-- 1 stevo stevo 47903099809 Apr 18 03:21 /media/data/docker/openstreetmap-tile-server/volumes/download/planet-latest.osm.pbf
