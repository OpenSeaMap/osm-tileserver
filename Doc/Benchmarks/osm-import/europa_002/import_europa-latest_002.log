stevo@stone:/media/data/docker/openstreetmap-tile-server$ md5sum volumes/download/europe-latest.osm.pbf
4a7dc83fc93a9e336da0b3368eee129b  volumes/download/europe-latest.osm.pbf
stevo@stone:/media/data/docker/openstreetmap-tile-server$ ./docker-service.sh import
+ IMAGE_NAME=openstreetmap-tile-server
+ VOLUME_TILECACH=openstreetmap-rendered-tiles
+ VOLUME_PSQL=openstreetmap-data-europa
++ pwd
++ pwd
+ VOLUMES_OPTS='
	-v /media/data/docker/openstreetmap-tile-server/volumes/download/europe-latest.osm.pbf:/data.osm.pbf 	-v /media/data/docker/openstreetmap-tile-server/volumes/download/:/download 	-v openstreetmap-data-europa:/var/lib/postgresql/10/main 	-v openstreetmap-rendered-tiles:/var/lib/mod_tile '
+ PORTS_OPTS=' --publish 8001:80 '
+ USER_OPTS=
+ IMPORT_CMD='docker run --rm -e THREADS=16          --name openstreetmap-tile-server   --publish 8001:80
	-v /media/data/docker/openstreetmap-tile-server/volumes/download/europe-latest.osm.pbf:/data.osm.pbf 	-v /media/data/docker/openstreetmap-tile-server/volumes/download/:/download 	-v openstreetmap-data-europa:/var/lib/postgresql/10/main 	-v openstreetmap-rendered-tiles:/var/lib/mod_tile  openstreetmap-tile-server import'
+ START_CMD='docker  run --rm -e THREADS=16 --detach --name openstreetmap-tile-server   --publish 8001:80
	-v /media/data/docker/openstreetmap-tile-server/volumes/download/europe-latest.osm.pbf:/data.osm.pbf 	-v /media/data/docker/openstreetmap-tile-server/volumes/download/:/download 	-v openstreetmap-data-europa:/var/lib/postgresql/10/main 	-v openstreetmap-rendered-tiles:/var/lib/mod_tile  openstreetmap-tile-server run'
+ STOP_CMD='docker container kill openstreetmap-tile-server'
+ case "$1" in
+ docker volume rm openstreetmap-data-europa
openstreetmap-data-europa
+ docker volume create openstreetmap-data-europa
openstreetmap-data-europa
+ docker run --rm -e THREADS=16 --name openstreetmap-tile-server --publish 8001:80 -v /media/data/docker/openstreetmap-tile-server/volumes/download/europe-latest.osm.pbf:/data.osm.pbf -v /media/data/docker/openstreetmap-tile-server/volumes/download/:/download -v openstreetmap-data-europa:/var/lib/postgresql/10/main -v openstreetmap-rendered-tiles:/var/lib/mod_tile openstreetmap-tile-server import
 * Starting PostgreSQL 10 database server
   ...done.
CREATE EXTENSION
CREATE EXTENSION
ALTER TABLE
ALTER TABLE
osm2pgsql version 0.96.0 (64 bit id space)

Allocating memory for dense node cache
Allocating dense node cache in one big chunk
Allocating memory for sparse node cache
Sharing dense sparse
Node-cache: cache=16348MB, maxblocks=261568*65536, allocation method=11
Mid: pgsql, cache=16348
Setting up table: planet_osm_nodes
Setting up table: planet_osm_ways
Setting up table: planet_osm_rels
Using lua based tag processing pipeline with script /home/renderer/src/openstreetmap-carto/openstreetmap-carto.lua
Using projection SRS 3857 (Spherical Mercator)
Setting up table: planet_osm_point
Setting up table: planet_osm_line
Setting up table: planet_osm_polygon
Setting up table: planet_osm_roads

Reading in file: /data.osm.pbf
Using PBF parser.
Processing: Node(2247810k 363.8k/s) Way(272947k 9.13k/s) Relation(4356570 534.81/s)  parse time: 44207s
Node stats: total(2247810335), max(6355400345) in 6179s
Way stats: total(272947663), max(678748913) in 29882s
Relation stats: total(4356666), max(9424058) in 8146s
Sorting data and creating indexes for planet_osm_line
Sorting data and creating indexes for planet_osm_roads
Sorting data and creating indexes for planet_osm_point
Sorting data and creating indexes for planet_osm_polygon
Stopping table: planet_osm_nodes
Stopping table: planet_osm_ways
Stopping table: planet_osm_rels
Building index on table: planet_osm_rels
Building index on table: planet_osm_ways
Stopped table: planet_osm_nodes in 0s
Copying planet_osm_roads to cluster by geometry finished
Creating geometry index on planet_osm_roads
Stopped table: planet_osm_rels in 348s
Creating osm_id index on planet_osm_roads
Creating indexes on planet_osm_roads finished
All indexes on planet_osm_roads created in 566s
Completed planet_osm_roads
Copying planet_osm_point to cluster by geometry finished
Creating geometry index on planet_osm_point
Copying planet_osm_line to cluster by geometry finished
Creating geometry index on planet_osm_line
Creating osm_id index on planet_osm_point
Creating indexes on planet_osm_point finished
All indexes on planet_osm_point created in 3106s
Completed planet_osm_point

Creating osm_id index on planet_osm_line
Creating indexes on planet_osm_line finished
All indexes on planet_osm_line created in 4232s
Completed planet_osm_line
Copying planet_osm_polygon to cluster by geometry finished
Creating geometry index on planet_osm_polygon

Creating osm_id index on planet_osm_polygon
Creating indexes on planet_osm_polygon finished
All indexes on planet_osm_polygon created in 16350s
Completed planet_osm_polygon
Stopped table: planet_osm_ways in 17880s

Osm2pgsql took 62089s overall
node cache: stored: 1375483525(61.19%), storage efficiency: 64.19% (dense blocks: 156506, sparse nodes: 430333953), hit rate: 62.69%
 * Stopping PostgreSQL 10 database server
   ...done.
+ exit 0
